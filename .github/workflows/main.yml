name: Build and Deploy Web Application

on:
  push:
    branches:
      - main  # Trigger on push to main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/app:project-333 Docker/
        docker push ${{ secrets.DOCKER_USERNAME }}/app:project-333

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure the build job is completed before deployment

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH connection and deploy to EC2
      run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" | tr -d '\r' > aws_key_333
          chmod 600 aws_key_333

          # Sync the updated files from GitHub to EC2 instance
          scp -i aws_key_333 -o StrictHostKeyChecking=no -r /Docker ec2-user@${{ secrets.EC2_HOST }}:/home/ec2-user/app/

          ssh -i aws_key_333 -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} << 'EOF'
            # Ensure the latest code is pulled from GitHub and synced to EC2
            cd /home/ec2-user/app
            git pull origin main  # Pull the latest changes from GitHub

            # Stop and remove the existing Docker container
            docker stop project-333 || true
            docker rm project-333 || true

            # Build the Docker image (force rebuild)
            docker build --no-cache -t project-333:latest .

            # Run the updated Docker container
            docker run -d -p 80:80 --name project-333 project-333:latest
          EOF
        
        